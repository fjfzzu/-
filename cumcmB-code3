b=ridge(y,x,k,s);
%b是岭回归模型中的系数向量β=[β0，β1，β2，...，βn],β0是常数项，β1到βn是自变量x1到xn对应的系数
%y是因变量向量
%x是自变量矩阵，x=[x1,...,xn],每个xi都是列向量
%k是岭参数，岭参数不同，岭回归模型不同，要选取合适的岭参数
%s这个位置的参数只能填0或1，或者不填默认为0。0表示输出的系数β该是多少就是多少，1表示输出系数β是标准化后的
x4=[];
x5=[];
x6=[];
x7=[];
y=[];

x=[x1,x2,x3,x4,x5,x6,x7];
%先画出岭迹图，以便选取合适的岭参数
k=0:1e-3:10;%岭参数
b=ridge(y,x,k);%回归系数

%岭迹图，一般选取开始平稳的“拐点”处的k值
plot(k,b)
xlabel('k')
ylabel('β')
title('岭迹')
legend('x1','x2','x3','x4','x5','x6','x7')



%每个k对应的残差平方和的图，要选取会使残差平方和小的k值
knum=size(b,2);
sse=zeros(knum);
y_gu=zeros(18,knum);
for j=1:knum
    t=0;
for i=1:18
    y_gu(i,j)=b(1,j)*x1(i)+b(2,j)*x2(i)+b(3,j)*x3(i)+b(4,j)*x4(i)+b(5,j)*x5(i)+b(6,j)*x6(i)+b(7,j)*x7(i);
    t=(y_gu(i,j)-y(i))^2+t;
end
    sse(j)=t;
end
plot(k,sse)
xlabel('k')
ylabel('SSE')
title('残差平方和与k的关系图')

%下面均是岭参数k=2情况
b1=ridge(y,x,0.034,0);%2是岭参数。最后一个位置的参数，是否输出标准化系数，0否1是
y_gu=[[ones(n,1),x(：,:)]*b]1;%用岭回归模型求出来的函数估计值（向量）
